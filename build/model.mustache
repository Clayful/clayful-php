<?php
namespace Clayful;

use Clayful\Clayful;

class {{className}} {

	public static $name = '{{className}}';

	public static $apis = array(
		{{#methods}}
		'{{method}}' => array(
			'modelName'      => '{{className}}',
			'methodName'     => '{{method}}',
			'httpMethod'     => '{{httpMethod}}',
			'path'           => '{{{path}}}',
			'params'         => array({{#arguments}}'{{{name}}}',{{^last}} {{/last}}{{/arguments}}),{{#usesFormData}}
			'usesFormData'   => true,{{/usesFormData}}{{#withoutPayload}}
			'withoutPayload' => true,{{/withoutPayload}}
		),
		{{#aliases}}
		'{{.}}' => array(
			'modelName'      => '{{className}}',
			'methodName'     => '{{.}}',
			'httpMethod'     => '{{httpMethod}}',
			'path'           => '{{{path}}}',
			'params'         => array({{#arguments}}'{{{name}}}'{{^last}}, {{/last}}{{/arguments}}),{{#usesFormData}}
			'usesFormData'   => true,{{/usesFormData}}{{#withoutPayload}}
			'withoutPayload' => true,{{/withoutPayload}}
		),
		{{/aliases}}
		{{/methods}}
	);

	public static function __callStatic($name, $arguments) {

		$detail = self::$apis[$name];

		return Clayful::callAPI(array(
			'modelName'      => $detail['modelName'],
			'methodName'     => $detail['methodName'],
			'httpMethod'     => $detail['httpMethod'],
			'path'           => $detail['path'],
			'params'         => $detail['params'],
			'usesFormData'   => array_key_exists('usesFormData', $detail),
			'withoutPayload' => array_key_exists('withoutPayload', $detail),
			'args'           => $arguments
		));

	}

}